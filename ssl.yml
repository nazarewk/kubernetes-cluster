- hosts: localhost
  connection: local
  tasks:
  - name: ensure ssl directory
    file:
      path: ssl
      state: directory

  - name: ssl/ca-key.pem
    command: openssl genrsa -out ssl/ca-key.pem 2048
    args:
      creates: ssl/ca-key.pem
  - name: ssl/ca.pem
    command: openssl req -x509 -new -nodes -key ssl/ca-key.pem -days 10000 -out ssl/ca.pem -subj "/CN=kube-ca"
    args:
      creates: ssl/ca.pem

  - name: ssl/api.cnf
    copy:
      dest: ssl/api.cnf
      content: |
        [req]
        req_extensions = v3_req
        distinguished_name = req_distinguished_name
        [req_distinguished_name]
        [ v3_req ]
        basicConstraints = CA:FALSE
        keyUsage = nonRepudiation, digitalSignature, keyEncipherment
        subjectAltName = @alt_names
        [alt_names]
        DNS.1 = kubernetes
        DNS.2 = kubernetes.default
        DNS.3 = kubernetes.default.svc
        DNS.4 = kubernetes.default.svc.cluster.local
        DNS.5 = {{ MASTER_HOST }}
        IP.1 = {{ K8S_SERVICE_IP }}

  - name: ssl/apiserver-key.pem
    command: openssl genrsa -out ssl/apiserver-key.pem 2048
    args:
      creates: ssl/apiserver-key.pem

  - name: ssl/apiserver.csr
    command: openssl req -new -key ssl/apiserver-key.pem -out ssl/apiserver.csr -subj "/CN=kube-apiserver" -config ssl/api.cnf
    args:
      creates: ssl/apiserver.csr

  - name: ssl/apiserver.pem
    command: openssl x509 -req -in ssl/apiserver.csr -CA ssl/ca.pem -CAkey ssl/ca-key.pem -CAcreateserial -out ssl/apiserver.pem -days 365 -extensions v3_req -extfile ssl/api.cnf
    args:
      creates: ssl/apiserver.pem

  - name: ssl/worker.cnf
    copy:
      dest: ssl/worker.cnf
      content: |
        [req]
        req_extensions = v3_req
        distinguished_name = req_distinguished_name
        [req_distinguished_name]
        [ v3_req ]
        basicConstraints = CA:FALSE
        keyUsage = nonRepudiation, digitalSignature, keyEncipherment
        subjectAltName = @alt_names
        [alt_names]
        IP.1 = $ENV::WORKER_IP

  - name: ssl/WORKER-worker-key.pem
    command: openssl genrsa -out ssl/{{ item.value.inventory_hostname }}-worker-key.pem 2048
    args:
      creates: "ssl/{{ item.value.inventory_hostname }}-worker-key.pem"
    with_dict: "{{ hostvars }}"

  - name: ssl/WORKER-worker.csr
    command: openssl req -new -key ssl/{{ item.value.inventory_hostname }}-worker-key.pem -out ssl/{{ item.value.inventory_hostname }}-worker.csr -subj "/CN={{ item.value.inventory_hostname }}" -config ssl/worker.cnf
    args:
      creates: "ssl/{{ item.value.inventory_hostname }}-worker.csr"
    environment:
      WORKER_IP: "{{ item.value.ansible_host }}"
    with_dict: "{{ hostvars }}"
    
  - name: ssl/WORKER-worker.pem
    command: openssl x509 -req -in ssl/{{ item.value.inventory_hostname }}-worker.csr -CA ssl/ca.pem -CAkey ssl/ca-key.pem -CAcreateserial -out ssl/{{ item.value.inventory_hostname }}-worker.pem -days 365 -extensions v3_req -extfile ssl/worker.cnf
    args:
      creates: "ssl/{{ item.value.inventory_hostname }}-worker.pem"
    environment:
      WORKER_IP: "{{ item.value.ansible_host }}"
    with_dict: "{{ hostvars }}"




  - name: ssl/admin-key.pem
    command: openssl genrsa -out ssl/admin-key.pem 2048
    args:
      creates: ssl/admin-key.pem

  - name: ssl/admin.csr
    command: openssl req -new -key ssl/admin-key.pem -out ssl/admin.csr -subj "/CN=kube-admin"
    args:
      creates: "ssl/admin.csr"

  - name: ssl/admin.pem
    command: openssl x509 -req -in ssl/admin.csr -CA ssl/ca.pem -CAkey ssl/ca-key.pem -CAcreateserial -out ssl/admin.pem -days 365
    args:
      creates: "ssl/admin.pem"

